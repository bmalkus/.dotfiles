set-window-option -g xterm-keys on

set -g mouse-utf8 on

if-shell "(( $(version_cmp \"$(tmux -V | cut -d' ' -f2) <= 2.0\") ))" "\
  set -g mouse-resize-pane on; \
  set -g mouse-select-pane on; \
  set -g mouse-select-window on; \
  set -g mode-mouse on"

if-shell "(( $(version_cmp \"$(tmux -V | cut -d' ' -f2) > 2.0\") ))" "\
  set -g mouse on"

unbind C-b
set -g prefix C-s

bind C-s send-prefix

if-shell "(( $(version_cmp \"$(tmux -V | cut -d' ' -f2) < 1.9\") ))" "\
  bind c new-window; \
  bind C-c new-window; \
  bind C-v split-window -h; \
  bind C-x split-window"

if-shell "(( $(version_cmp \"$(tmux -V | cut -d' ' -f2) >= 1.9\") ))" "\
  bind c new-window -c \"#{pane_current_path}\"; \
  bind C-c new-window -c \"#{pane_current_path}\"; \
  bind C-v split-window -h -c \"#{pane_current_path}\"; \
  bind C-x split-window -c \"#{pane_current_path}\" "

set -g renumber-windows

bind -r   h run-shell 'tmux_lpane'
bind -r   j select-pane -D
bind -r   k select-pane -U
bind -r   l run-shell 'tmux_rpane'

bind -r C-h resize-pane -L
bind -r C-j resize-pane -D
bind -r C-k resize-pane -U
bind -r C-l resize-pane -R

bind -r " " next-layout

bind -r   p previous-window
bind -r   n next-window

bind -r   P swap-window -t :-1
bind -r   N swap-window -t :+1

bind      S command-prompt -p "(rename-session) " "rename-session '%%'"
bind    '$' command-prompt -p "(rename-session) " "rename-session '%%'"
bind      W command-prompt -p "(rename-window) " "rename-window '%%'"
bind      , command-prompt -p "(rename-window) " "rename-window '%%'"

bind    M-w command-prompt -p "(select-window) " "select-window -t ':%%'"
bind    "'" command-prompt -p "(select-window) " "select-window -t ':%%'"
bind    M-s command-prompt -p "(select-session) " "select-session -t ':%%'"

setw -g mode-keys vi

set -g default-terminal "screen-256color"

set -s escape-time 0
set -g repeat-time 250

# appearance

set -g pane-active-border-style fg=magenta,bg=magenta
set -g pane-border-style fg=magenta

set -g status-style fg=white,bg=black

set -g message-style fg=colour255,bg=colour24

set -g display-panes-active-colour brightred
set -g display-panes-colour magenta
set -g display-panes-time 750

set -g status-left-length 25
set -g status-left " #[fg=colour255,bg=colour24,bold]  #S  #[fg=colour254,bg=black,nobold]  "

set -g status-right-length 75
set -g status-right ' #[fg=colour250,bg=colour236]#([[ -z $BYOBU_TTY ]] && echo -n " tmux " || echo -n " byobu ")#[default] #[fg=colour255,bg=colour24,bold]  %d.%m %A  #[default] #[fg=colour255,bg=colour31,bold]  %R  #[fg=colour254,bg=black,nobold]  '

set -g window-status-format "#[fg=colour250,bg=colour236,noitalics] #I #[default,italics] #W "
set -g window-status-current-format "#[fg=colour255,bg=colour31,bold] #I #[fg=colour255,bg=colour24,bold,noitalics] #W#F "

set-window-option -g window-status-style fg=white,bg=black
set-window-option -g window-status-current-style fg=black,bg=brightwhite

set -g window-status-activity-attr reverse

set -g monitor-activity on

set-window-option -g mode-style fg=brightwhite,bg=colour31

should_pass_vim='echo "#{pane_current_command}" | grep -iqE "((^|\/)(g?(view|n?vim?x?)(diff)?)|(ssh)$)"'
should_pass_fzf='echo "#{pane_start_command}" | grep -iqE "(^|\/)fzf"'

bind -n C-h if-shell "$should_pass_vim || $should_pass_fzf" "send-keys C-h" "run-shell 'tmux_lpane'"
bind -n C-j if-shell "$should_pass_vim || $should_pass_fzf" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$should_pass_vim || $should_pass_fzf" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$should_pass_vim || $should_pass_fzf" "send-keys C-l" "run-shell 'tmux_rpane'"

