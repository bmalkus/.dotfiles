set-window-option -g xterm-keys on

if-shell "(( $(version_cmp \"$(tmux -V | cut -d' ' -f2) <= 2.1\") ))" "\
  set -g mouse-utf8 on"

if-shell "(( $(version_cmp \"$(tmux -V | cut -d' ' -f2) <= 2.0\") ))" "\
  set -g mouse-resize-pane on; \
  set -g mouse-select-pane on; \
  set -g mouse-select-window on; \
  set -g mode-mouse on"

if-shell "(( $(version_cmp \"$(tmux -V | cut -d' ' -f2) > 2.0\") ))" "\
  set -g mouse on; \
  bind -T root WheelUpPane   if-shell -F -t = \"#{alternate_on}\" \"send-keys -M\" \"select-pane -t =; copy-mode -e; send-keys -M\"; \
  bind -T root WheelDownPane if-shell -F -t = \"#{alternate_on}\" \"send-keys -M\" \"select-pane -t =; send-keys -M\"; \
  bind -T root C-WheelUpPane   if-shell -F -t = \"#{alternate_on}\" \"send-keys -M\" \"select-pane -t =; copy-mode -e; send-keys -M\"; \
  bind -T root C-WheelDownPane if-shell -F -t = \"#{alternate_on}\" \"send-keys -M\" \"select-pane -t =; send-keys -M\" "

if-shell "command -v xsel >/dev/null 2>&1" "\
  bind C-y run-shell \"tmux save-buffer - | xsel -i -b\" \\\; display \"Copied buffer to clipboard\" "

if-shell "command -v xclip >/dev/null 2>&1" "\
  bind C-y run-shell \"tmux save-buffer - | xclip -i -sel clip\" \\\; display \"Copied buffer to clipboard\" "

bind -t vi-copy      C-WheelUpPane halfpage-up
bind -t vi-copy    C-WheelDownPane halfpage-down
bind -t emacs-copy   C-WheelUpPane halfpage-up
bind -t emacs-copy C-WheelDownPane halfpage-down

unbind C-b
set -g prefix C-s

if-shell "(( $(version_cmp \"$(tmux -V | cut -d' ' -f2) < 1.9\") ))" "\
  bind c new-window; \
  bind C-c new-window; \
  bind C-v split-window -h; \
  bind C-x split-window"

if-shell "(( $(version_cmp \"$(tmux -V | cut -d' ' -f2) >= 1.9\") ))" "\
  bind c new-window -c \"#{pane_current_path}\"; \
  bind C-c new-window -c \"#{pane_current_path}\"; \
  bind C-v split-window -h -c \"#{pane_current_path}\"; \
  bind C-x split-window -c \"#{pane_current_path}\" "

set -g renumber-windows on

# bind      h run-shell 'tmux_lpane'
# bind      l run-shell 'tmux_rpane'
bind      h select-pane -L
bind      l select-pane -R
bind      j select-pane -D
bind      k select-pane -U

bind -r C-h resize-pane -L
bind -r C-j resize-pane -D
bind -r C-k resize-pane -U
bind -r C-l resize-pane -R

bind -r M-h resize-pane -L 10
bind -r M-j resize-pane -D 10
bind -r M-k resize-pane -U 10
bind -r M-l resize-pane -R 10

bind    C-r refresh-client

bind -r " " next-layout

bind -r   p previous-window
bind -r   n next-window

bind -r   P swap-window -t :-1
bind -r   N swap-window -t :+1

bind      S command-prompt -p "(rename-session) " "rename-session '%%'"
bind    '$' command-prompt -p "(rename-session) " "rename-session '%%'"
bind      W command-prompt -p "(rename-window) " "rename-window '%%'"
bind      , command-prompt -p "(rename-window) " "rename-window '%%'"

bind    M-w command-prompt -p "(select-window) " "select-window -t ':%%'"
bind    "'" command-prompt -p "(select-window) " "select-window -t ':%%'"
bind    M-s command-prompt -p "(select-session) " "select-session -t ':%%'"

setw -g mode-keys vi

set -g default-terminal "screen-256color"

if-shell "[ -f $HOME/.terminfo/t/tmux-256color ] && [[ $(version_cmp \"$(tmux -V | cut -d' ' -f2) > 2.0\") ]]" " \
    set -g default-terminal \"tmux-256color\" "

set -s escape-time 0
set -g repeat-time 350

# appearance

if-shell "(( $(version_cmp \"$(tmux -V | cut -d' ' -f2) >= 1.9\") ))" "\
  set -g pane-active-border-style fg=magenta,bg=magenta; \
  set -g pane-border-style fg=magenta; \
  set -g status-style fg=white,bg=black; \
  set -g message-style fg=colour255,bg=colour24; \
  set-window-option -g window-status-style fg=white,bg=black; \
  set-window-option -g window-status-current-style fg=black,bg=brightwhite; \
  set-window-option -g mode-style fg=brightwhite,bg=colour31 "

if-shell "(( $(version_cmp \"$(tmux -V | cut -d' ' -f2) < 1.9\") ))" "\
  set -g pane-active-border-fg magenta; \
  set -g pane-active-border-bg magenta; \
  set -g pane-border-fg magenta; \
  set -g status-fg white; \
  set -g status-bg black; \
  set -g message-fg colour255; \
  set -g message-bg colour24; \
  set-window-option -g window-status-fg white; \
  set-window-option -g window-status-bg black; \
  set-window-option -g window-status-current-fg black; \
  set-window-option -g window-status-current-bg brightwhite; \
  set-window-option -g mode-fg brightwhite; \
  set-window-option -g mode-bg colour31 "

set -g display-panes-active-colour brightred
set -g display-panes-colour magenta
set -g display-panes-time 750

set -g status-position bottom
set -g status-justify left

_LIGHTER=colour68
_DARKER=colour61

set -g status-left-length 25
set -g status-left " #[fg=colour255,bg=${_LIGHTER},bold]  #S  #[fg=colour254,bg=black,nobold]  "

set -g status-right-length 75
set -g status-right "#[fg=colour255,bg=${_LIGHTER},bold]  #(uname -m)  #[default] #[fg=colour255,bg=${_DARKER},bold]  #(whoami)@#(hostname)  #[default] "'#(grep -q BAT <<< "$(upower -e)" &&\
  echo -n "#[fg=colour255,bg=${_LIGHTER},bold] " $(upower -i "$(upower -e | grep BAT)" | grep percentage | tr -s " " | cut -d" " -f3) " #[default] ")'\
"#[fg=colour255,bg=${_DARKER},bold]  %d.%m %A  #[default] #[fg=colour255,bg=${_LIGHTER},bold]  %R  #[fg=colour254,bg=black,nobold]  "

set -g window-status-format "#[fg=colour250,bg=colour236,noitalics] #I #[default,italics] #W "
set -g window-status-current-format "#[fg=colour255,bg=${_LIGHTER},bold] #I #[fg=colour255,bg=${_DARKER},bold,noitalics] #W#F "

set -g window-status-activity-attr reverse

set -g monitor-activity on

should_pass_vim='echo "#{pane_current_command}" | grep -iqE "((^|\/)(g?(view|n?vim?x?)(diff)?)|(ssh)$)"'
should_pass_fzf='echo "#{pane_start_command}" | grep -iqE "(^|\/)fzf"'

bind -n C-h if-shell "$should_pass_vim || $should_pass_fzf" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$should_pass_vim || $should_pass_fzf" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$should_pass_vim || $should_pass_fzf" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$should_pass_vim || $should_pass_fzf" "send-keys C-l" "select-pane -R"

bind -t vi-copy v begin-selection
bind -t vi-copy C-v rectangle-toggle
bind -t vi-copy y copy-selection

bind -t vi-copy u halfpage-up
bind -t vi-copy d halfpage-down

set -g allow-rename off

setw -g aggressive-resize on

bind s send-prefix
bind C-s last-window
