priority 1

snippet for "for int loop (for)"
for (${4:int} ${2:i} = 0; $2 < ${1:count}; ${3:++$2})
{
	${VISUAL}${0}
}
endsnippet

snippet forn "for loop (forn)"
for (${2:i} = 0; $2 < ${1:count}; ${3:++$2})
{
	${VISUAL}${0}
}
endsnippet

snippet fori "for int loop (fori)"
for (${4:int} ${2:i} = 0; $2 < ${1:count}; ${3:++$2})
{
	${VISUAL}${0}
}
endsnippet

snippet forc "custom for loop (forc)"
for (${5:int} ${1:i} = 0; ${3:$1 < ${2:count}}; ${4:++$1})
{
	${VISUAL}${0}
}
endsnippet

snippet eli "else if .. (eli)"
else if (${1:/* condition */})
{
	${VISUAL}${0}
}
endsnippet

snippet st "struct"
struct ${1:`!p snip.rv = (snip.basename or "name") + "_t"`}
{
	${0:/* data */}
};
endsnippet

snippet fun "function" b
${1:void} ${2:function_name}(${3})
{
	${VISUAL}${0}
}
endsnippet

snippet fund "function declaration" b
${1:void} ${2:function_name}(${3});
endsnippet

snippet do
do {
	${2}
} while (${1:/* condition */});
endsnippet

snippet el
else
{
	${0}
}
endsnippet

snippet elif
else if (${1:/* condition */})
{
	${0}
}
endsnippet

snippet if
if (${1:/* condition */})
{
	${0}
}
endsnippet

snippet ife
if (${1:/* condition */})
{
	${2}
}
else
{
	${0}
}
endsnippet

snippet ifi
if (${1:/* condition */})
	${0};
endsnippet

snippet ifii
if (${1:/* condition */}) ${0};
endsnippet

snippet incl
#include "$1"
endsnippet

snippet mainn
int main()
{
	${0}
	return 0;
}
endsnippet

snippet swi
switch (${1:/* variable */})
{
	case ${2:/* variable case */}:
		${3}
		${4:break;}${5}
	default:
		${6}
}
endsnippet

snippet swin
switch (${1:/* variable */})
{
	case ${2:/* variable case */}:
		${3}
		${4:break;}${5}
}
endsnippet

snippet tde
typedef enum
{
	${1:/* data */}
} ${2:foo};
endsnippet

snippet tds
typedef struct ${2:_$1 }
{
	${3:/* data */}
} ${1:`!v vim_snippets#Filename('$1_t', 'name')`};
endsnippet

snippet wh
while (${1:/* condition */})
{
	${2}
}
endsnippet

snippet while
while (${1:/* condition */})
{
	${2}
}
endsnippet

# vim:ft=snippets:
