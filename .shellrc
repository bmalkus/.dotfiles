[ -z "$PROFILE" ] && . "$HOME/.profile"

alias ls='$_ls --color=auto'
alias grep='grep --color=auto'
alias ll='ls -lFh'
alias lla='ls -alFh'
alias llt='ls -alFh --sort=time'
alias llat='ls -alFh --sort=time --time=access'
alias lls='ls -alFh --sort=size'
alias la='ls -A --color=auto'
alias l='ls -CF'

alias tmux='tmux -2'

alias rm='rm -i'
alias cp='cp -i'

alias cd.='cd ..'
alias cd..='cd ..'
alias cd-='cd -'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'

alias s='saved'
alias c='local_cd_hist'
alias c-='c -'

alias j='jump'

alias t='tmux attach -t 1 2>/dev/null || tmux new -s 1'

alias ssh='TERM=xterm-256color ssh'

export LESS=-iSRM~j4#2
[[ $(uname -s) =~ Darwin ]] || export LESS=${LESS}F

alias_if_needed()
{
  gcmd="g$1"
  path_to="$(which $gcmd 2>/dev/null)"
  if [[ ! -x "$path_to" ]]; then
    export _$1=$1
    # alias $gcmd=$1
  else
    export _$1=$gcmd
  fi
}

alias_if_needed ls
alias_if_needed awk
alias_if_needed sed
alias_if_needed timeout
alias_if_needed wc
alias_if_needed readlink
alias_if_needed sort

# http://jeroenjanssens.com/2013/08/16/quickly-navigate-your-filesystem-from-the-command-line.html
export MARKPATH=$HOME/.marks

jump()
{
  [[ -n $1 ]] && { cd -P "$MARKPATH/$1" 2>/dev/null \
    || echo "No such mark: $1"; } \
    || { echo;
    for f in $($_ls -A "$MARKPATH"); do
      echo "$f" '->' $($_readlink -f "$MARKPATH/$f" || echo -en '\e[3m<invalid>\e[0m'); done \
    | $_awk -F ' -> ' '{if ($0 != "") printf "    %-10s ->  %s\n", $1, $2; else print}';
    echo; }
}

mark()
{
  mkdir -p "$MARKPATH"; ln -s "$(pwd)" "$MARKPATH/$1"
}

unmark()
{
  rm -i "$MARKPATH/$1"
}

command -v vim >/dev/null 2>&1 &&
  export EDITOR=vim
command -v vimx >/dev/null 2>&1 &&
  export EDITOR=vimx

# in order to keep aliases in one place
if [[ -n $ZSH_VERSION ]]; then
  alias sr=". $HOME/.zshrc"
else
  alias sr=". $HOME/.bashrc"
fi

export FZF_DEFAULT_OPTS="--color fg:187,bg:233,hl:103,fg+:222,bg+:234,hl+:104 \
  --color info:183,prompt:110,spinner:107,pointer:167,marker:215 \
  --bind \"ctrl-u:page-up,ctrl-d:page-down,ctrl-j:accept,ctrl-k:ignore,alt-a:select-all,alt-d:deselect-all,alt-t:toggle-all\""

export FZF_ALT_C_COMMAND='find -L . -type d 2>/dev/null | grep -v ".git" | $_sed 1d | cut -b3-'
export FZF_CTRL_T_COMMAND='find -L . -type d -o -type f -o -type l 2>/dev/null | grep -v ".git/" | $_sed 1d | cut -b3-'
export FZF_DEFAULT_COMMAND='ag -g "" -U --hidden --ignore .git/ 2>/dev/null'

if [ -x /usr/bin/dircolors ]; then
  if [[ -f $DOTFILES_DIR/dircolors ]]; then
    eval "$(dircolors $DOTFILES_DIR/dircolors -b)"
  elif [[ $TERM =~ ^tmux ]]; then
    fname=/tmp/__dir_colors$RANDOM
    $_sed -ne '/^TERM/q; p' /etc/DIR_COLORS > $fname
    echo "TERM tmux" >> $fname
    echo "TERM tmux-256color" >> $fname
    $_sed -ne '/^TERM/,$p' /etc/DIR_COLORS >> $fname
    eval "$(dircolors -b $fname)"
    rm -f $fname
  fi
fi

export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

. $DOTFILES_DIR/z.sh

if [[ -z ${__GIT_CMD_PROMPT_TIMEOUT__+x} ]]; then
  __GIT_CMD_PROMPT_TIMEOUT__="0.1"
fi
if [[ -z ${__GIT_DETAILED_PROMP_INFO__+x} ]]; then
  __GIT_DETAILED_PROMP_INFO__=1
fi

__git_info()
{
  local git_info
  if [[ $(git rev-parse --is-bare-repository 2>/dev/null) =~ true ]]; then
    git_info="/bare repo/"
  else
    local killed=0
    local more_info=""
    git_info="$(git branch 2> /dev/null | grep '* ' | cut -c3-)"
    if [[ -n $git_info ]]; then
      git_info="${__styles[YELLOW]}$git_info"
      if [[ -z $ZSH_VERSION ]]; then
        git_info="$git_info "
      elif [[ $__GIT_DETAILED_PROMP_INFO__ == 0 ]]; then
        git_info="$git_info ${__styles[GREEN]}*** "
      else
        local ahead_behind
        ahead_behind="$($_timeout ${__GIT_CMD_PROMPT_TIMEOUT__}s $SHELL -c "git rev-list --left-right --count HEAD...@{u} 2>/dev/null")"
        ret=$?
        if [[ $ret -eq 124 || $ret -eq 137 ]]; then
          killed=1
        else
          local ahead="$($_sed -nre 's/^([0-9]+)\s+([0-9]+)$/\1/p' <<< "$ahead_behind")"
          local behind="$($_sed -nre 's/^([0-9]+)\s+([0-9]+)$/\2/p' <<< "$ahead_behind")"
          if [[ $behind -gt 0 ]]; then
            more_info="$more_info${__styles[BLUE]}\u25BC$behind"
          fi
          if [[ $ahead -gt 0 ]]; then
            more_info="$more_info${__styles[BLUE]}\u25B2$ahead"
          fi
        fi
        more_info="$more_info "

        if ! (( $killed )); then
          local untracked
          untracked="$($_timeout ${__GIT_CMD_PROMPT_TIMEOUT__}s $SHELL -c "git ls-files \"$(git rev-parse --show-toplevel 2>/dev/null)\" --exclude-standard --others 2>/dev/null | $_wc -l")"
          ret=$?
          if [[ $ret -eq 124 || $ret -eq 137 ]]; then
            killed=1
          else
            if [[ $untracked -gt 0 ]]; then
              more_info="$more_info${__styles[YELLOW]}$untracked\u25A1 "
            fi
          fi
        fi

        if ! (( $killed )); then
          local unstaged
          unstaged="$($_timeout ${__GIT_CMD_PROMPT_TIMEOUT__}s $SHELL -c "git diff --numstat 2>/dev/null | $_wc -l")"
          ret=$?
          if [[ $ret -eq 124 || $ret -eq 137 ]]; then
            killed=1
          else
            if [[ $unstaged -gt 0 ]]; then
              more_info="$more_info${__styles[YELLOW]}$unstaged\u25EA "
            fi
          fi
        fi

        if ! (( $killed )); then
          local staged
          staged="$($_timeout ${__GIT_CMD_PROMPT_TIMEOUT__}s $SHELL -c "git diff --cached --numstat 2>/dev/null | $_wc -l")"
          ret=$?
          if [[ $ret -eq 124 || $ret -eq 137 ]]; then
            killed=1
          else
            if [[ $staged -gt 0 ]]; then
              more_info="$more_info${__styles[YELLOW]}$staged\u25A0 "
            fi
          fi
        fi
        if (( $killed )); then
          git_info="$git_info ${__styles[RED]}? "
        else
          git_info="$git_info$more_info"
        fi
      fi
    fi
  fi
  echo -e "$git_info"
}

__get_virtual_env()
{
  virtual_env=""
  if [[ -z $VIRTUAL_ENV_DISABLE_PROMPT ]]; then
    if [[ -n $VIRTUAL_ENV ]]; then
      virtual_env="($(basename $VIRTUAL_ENV)) "
    fi
  fi
  echo $virtual_env
}

__prompt_char()
{
  git branch >/dev/null 2>/dev/null && echo "Â±" && return
  echo '$'
}

__add_to_hist()
{
  local hist_size="${#__cd_history__[@]}"
  if [[ ${__cd_history__[$hist_size]} != $1 && ! -z $1 ]]; then
    __cd_history__[$(( $hist_size + 1 ))]="$1"
  fi
}

__dir_history()
{
  if [[ $PWD != $OLDPWD ]]; then
    __add_to_hist $OLDPWD
  fi
}

function ssh()
{
  if [ -n "$TMUX" ]; then
    target=${*##*\ }
    tmux setenv "__pane_title_$TMUX_PANE" "$target"
    command ssh "$@"
  else
    command ssh "$@"
  fi
}

. "$DOTFILES_DIR/dir_utils.sh"

[ -r "$HOME/.shellrc.local" ] && . "$HOME/.shellrc.local"

if tmux_path=$(type -p tmuxifier 2>/dev/null) && [ -n "$tmux_path" ] &&
  tmuxifier_path=$(type -p tmuxifier 2>/dev/null) && [ -n "$tmuxifier_path" ]; then
  alias mux=tmuxifier
  if [[ -z "$TMUXIFIER_LAYOUT_PATH" ]]; then
    export TMUXIFIER_LAYOUT_PATH="$HOME/.tmux-layouts"
  fi
  mkdir -p "$TMUXIFIER_LAYOUT_PATH"
  eval "$(tmuxifier init -)"
fi

# vim: ft=zsh
