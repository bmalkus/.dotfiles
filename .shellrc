alias ll='ls -alFh'
alias la='ls -A --color=auto'
alias l='ls -CF'

alias tmux='tmux -2'

alias rm='rm -i'
alias cp='cp -i'

alias cd.='cd ..'
alias cd..='cd ..'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'
alias ......='cd ../../../../..'

alias s='saved'
alias c='local_cd_hist'

detach()
{
  (nohup "$@" >/dev/null 2>&1 &)
}

command -v vim >/dev/null 2>&1 &&
  EDITOR=vim
command -v vimx >/dev/null 2>&1 &&
  EDITOR=vimx

# in order to keep aliases in one place
if [[ -n $ZSH_VERSION ]]; then
  alias sr="source $HOME/.zshrc"
else
  alias sr="source $HOME/.bashrc"
fi

export FZF_DEFAULT_OPTS="--color fg:187,bg:233,hl:103,fg+:222,bg+:234,hl+:104 \
--color info:183,prompt:110,spinner:107,pointer:167,marker:215 \
--bind \"ctrl-u:page-up,ctrl-d:page-down,alt-a:select-all,alt-d:deselect-all,alt-t:toggle-all\""

export FZF_ALT_C_COMMAND='find -L . -type d 2>/dev/null | grep -v ".git" | sed 1d | cut -b3-'
export FZF_CTRL_T_COMMAND='find -L . -type d -o -type f -o -type l 2>/dev/null | grep -v ".git/" | sed 1d | cut -b3-'
export FZF_DEFAULT_COMMAND='ag -g "" -U --hidden --ignore .git/ 2>/dev/null'

if [ -x /usr/bin/dircolors ]; then
    eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
fi

export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

source $DOTFILES_DIR/z.sh

__get_git_branch()
{
  local git_info
  if [[ $(git rev-parse --is-bare-repository 2>/dev/null) =~ true ]]; then
    git_info="/bare repo/"
  else
    local branch_icon=""
    local killed=0
    local more_info=""
    git_info="$(git branch 2> /dev/null | grep '* ' | cut -c3-)"
    if [[ -n $git_info ]]; then
      [[ -f $HOME/.fonts/octicons-local.ttf ]] &&
        branch_icon="\uf020 "
      git_info="$LIGHT_BLUE$branch_icon$git_info"
      local ahead_behind
      ahead_behind="$(timeout 0.1s bash -c "git rev-list --left-right --count HEAD...@{u} 2>/dev/null")"
      ret=$?
      if [[ $ret -eq 124 || $ret -eq 137 ]]; then
        killed=1
      else
        local ahead="$(sed -nre 's/^([0-9]+)\s+([0-9]+)$/\1/p' <<< "$ahead_behind")"
        local behind="$(sed -nre 's/^([0-9]+)\s+([0-9]+)$/\2/p' <<< "$ahead_behind")"
        if [[ $behind -gt 0 ]]; then
          more_info="$more_info$GREEN\u25BC$behind"
        fi
        if [[ $ahead -gt 0 ]]; then
          more_info="$more_info$GREEN\u25B2$ahead"
        fi
      fi
      more_info="$more_info "

      if ! (( $killed )); then
        local untracked
        untracked="$(timeout 0.1s bash -c "git ls-files \"$(git rev-parse --show-toplevel)\" --exclude-standard --others | wc -l")"
        ret=$?
        if [[ $ret -eq 124 || $ret -eq 137 ]]; then
          killed=1
        else
          if [[ $untracked -gt 0 ]]; then
            more_info="$more_info$LIGHT_BLUE$untracked\u25A1 "
          fi
        fi
      fi

      if ! (( $killed )); then
        local unstaged
        unstaged="$(timeout 0.1s bash -c "git diff --numstat | wc -l")"
        ret=$?
        if [[ $ret -eq 124 || $ret -eq 137 ]]; then
          killed=1
        else
          if [[ $unstaged -gt 0 ]]; then
            more_info="$more_info$LIGHT_BLUE$unstaged\u25EA "
          fi
        fi
      fi

      if ! (( $killed )); then
        local staged
        staged="$(timeout 0.1s bash -c "git diff --cached --numstat | wc -l")"
        ret=$?
        if [[ $ret -eq 124 || $ret -eq 137 ]]; then
          killed=1
        else
          if [[ $staged -gt 0 ]]; then
            more_info="$more_info$LIGHT_BLUE$staged\u25A0 "
          fi
        fi
      fi
      if (( $killed )); then
        git_info="$git_info $RED? "
      else
        git_info="$git_info$more_info"
      fi
    fi
  fi
  echo -e "$git_info"
}

__get_virtual_env()
{
  virtual_env=""
  if [[ -z $VIRTUAL_ENV_DIABLE_PROMPT ]]; then
    if [[ -n $VIRTUAL_ENV ]]; then
      virtual_env="($(basename $VIRTUAL_ENV)) "
    fi
  fi
  echo $virtual_env
}

function __add_to_hist()
{
  local hist_size="${#__cd_history__[@]}"
  if [[ ${__cd_history__[$hist_size]} != $1 && ! -z $1 ]]; then
    __cd_history__[$(( $hist_size + 1 ))]="$1"
  fi
}

__dir_history()
{
  if [[ $PWD != $OLDPWD ]]; then
    __add_to_hist $OLDPWD
  fi
}

